{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Pieces","val","Object","classCallCheck","this","coordinate","original","x","y","transform","concat","initPiecesArray","tmp","index","push","PuzzlePiece","_this","props","pieces","react_default","a","createElement","className","style","getStyle","onClick","movePiece","React","Component","PuzzleGrid","_this2","piecesArrayProps","map","p","App_PuzzlePiece","key","NewGameBtn","_this3","newGame","DisplayLabel","children","content","Toolbar","App_NewGameBtn","App_DisplayLabel","step","time","App","_this4","possibleConstructorReturn","getPrototypeOf","call","stopTimer","clearInterval","timer","initGame","setState","piecesArray","emptyCoordinate","isEnd","shufflePuzzle","setInterval","state","window","confirm","pNum","cell","i","_ref","Math","floor","random","iPos","ePos","indexDiff","abs","moveDoubleAndTriple","moveSinglePiece","checkWin","moveLength","sign","indexTmp","findPuzzleIndex","_i","_indexTmp","length","showMessage","message","setTimeout","alert","every","App_Toolbar","App_PuzzleGrid","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a6b6ce52.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass Pieces {\n  constructor(val) {\n    this.coordinate = val;\n    this.original = val;\n  }\n  getStyle() {\n    const x = this.coordinate % 4 * 102;\n    const y = ((this.coordinate / 4) >> 0) * 102;\n    return {\n      transform: `translate(${x}px, ${y}px)`\n    }\n  }\n}\n\nfunction initPiecesArray() {\n  const tmp = [];\n  for (let index = 0; index < 15; index++) {\n    tmp.push(new Pieces(index));\n  }\n  return tmp;\n}\n\nclass PuzzlePiece extends React.Component {\n  render() {\n    const index = this.props.pieces.original;\n    return (\n      <div className=\"cell\" style={this.props.pieces.getStyle()} onClick={() => this.props.movePiece(index)}>\n        {index + 1}\n      </div>\n    );\n  }\n}\n\nclass PuzzleGrid extends React.Component {\n  render() {\n    return (\n      <div className=\"grid\">\n        {this.props.piecesArrayProps.map((p) =>\n          <PuzzlePiece key={p.original} pieces={p} movePiece={this.props.movePiece}/>\n        )};\n      </div>\n    )\n  }\n}\n\nclass NewGameBtn extends React.Component {\n  render() {\n    return (\n      <div className=\"button\" onClick={() => this.props.newGame()}>\n        New Game\n      </div>\n    )\n  }\n}\n\nclass DisplayLabel extends React.Component {\n  render() {\n    return (\n      <div className=\"label\">\n        <div className=\"label-icon\">\n          {this.props.children}\n        </div>\n        <div className=\"label-content\">\n          {this.props.content}\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Toolbar extends React.Component {\n  render() {\n    return (\n      <div className=\"bar\">\n        <NewGameBtn newGame={this.props.newGame}/>\n        <DisplayLabel content={this.props.step}>\n          <i className=\"fas fa-shoe-prints\" />\n        </DisplayLabel>\n        <DisplayLabel content={this.props.time}>\n          <i className=\"fas fa-clock\" />\n        </DisplayLabel>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      piecesArray: initPiecesArray(),\n      emptyCoordinate: 15,\n      step: 0,\n      time: 0,\n      isEnd: true\n    };\n  }\n  stopTimer = () => {\n    clearInterval(this.timer);\n    this.timer = 0;\n  }\n  initGame = () => {\n    this.stopTimer();\n    this.setState({\n      piecesArray: initPiecesArray(),\n      emptyCoordinate: 15,\n      time: 0,\n      step: 0,\n      isEnd: false,\n    });\n    this.shufflePuzzle();\n    this.timer = setInterval(() => this.setState({time: this.state.time + 1}), 1000);\n  }\n  newGame= () => {\n    if (this.state.isEnd || window.confirm('New Game?')) this.initGame();\n  }\n  shufflePuzzle = () => {\n    let pNum = 15,\n      cell = this.state.piecesArray,\n      i = 0;\n    while (pNum) {\n      pNum--;\n      i = Math.floor(Math.random() * pNum);\n      [cell[pNum].coordinate, cell[i].coordinate] = [cell[i].coordinate, cell[pNum].coordinate];\n    }\n    this.setState({piecesArray: cell});\n  }\n  movePiece = (index) => {\n    const cell = this.state.piecesArray,\n      iPos = cell[index].coordinate,\n      ePos = this.state.emptyCoordinate,\n      indexDiff = ePos - iPos;\n    if (!this.state.isEnd) {\n        //vertical\n      if (iPos % 4 === ePos % 4) {\n        if (Math.abs(indexDiff / 4) > 1) {\n          this.moveDoubleAndTriple((indexDiff / 4), index, 4);\n        } else if (Math.abs(indexDiff / 4) === 1) {\n          this.moveSinglePiece(iPos, index);\n        }\n      }\n      //horizontal\n      if ((iPos / 4) >> 0 === (ePos / 4) >> 0) {\n        if (Math.abs(indexDiff) > 1) {\n          this.moveDoubleAndTriple(indexDiff, index, 1);\n        } else if (Math.abs(indexDiff) === 1) {\n          this.moveSinglePiece(iPos, index);\n        }\n      }\n    }\n  }\n  moveSinglePiece = (indexDiff, index) => {\n    const cell = this.state.piecesArray;\n    cell[index].coordinate = this.state.emptyCoordinate;\n    this.setState((state) => {\n      return {\n        piecesArray: cell,\n        emptyCoordinate: indexDiff,\n        step: state.step + 1\n      }\n    });\n    this.checkWin();\n  }\n  moveDoubleAndTriple = (indexDiff, index, moveLength) => {\n    const cell = this.state.piecesArray,\n      iPos = cell[index].coordinate,\n      sign = Math.sign(indexDiff),\n      indexTmp = [];\n    for (let i = 0; i < Math.abs(indexDiff); i++) {\n      indexTmp.push(this.findPuzzleIndex(iPos + sign * moveLength * i));\n    }\n    for (const index of indexTmp) {\n      cell[index].coordinate += moveLength * sign;\n    }\n    this.setState((state) => {\n      return {\n        piecesArray: cell,\n        emptyCoordinate: iPos,\n        step: state.step + 1\n      }\n    });\n    this.checkWin();\n  }\n  findPuzzleIndex = (val) => {\n    for (let i = 0; i < 15; i++) {\n      if (this.state.piecesArray[i].coordinate === val) return i;\n    }\n  }\n  showMessage = (message) => {\n    setTimeout(() => alert(message), 600);\n  }\n  checkWin = () => {\n    if (this.state.piecesArray.every((p) => p.original === p.coordinate)) {\n      this.showMessage('You Win!');\n      this.stopTimer();\n      this.setState({isEnd: true});\n    }\n  }\n  render() {\n    return(\n      <div className=\"puzzle\">\n        <h1>15 Puzzle</h1>\n        <Toolbar newGame={this.newGame} step={this.state.step} time={this.state.time}/>\n        <PuzzleGrid piecesArrayProps={this.state.piecesArray} movePiece={this.movePiece}/>\n      </div>\n    )\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}