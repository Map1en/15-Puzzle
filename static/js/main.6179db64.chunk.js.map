{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Pieces","val","Object","classCallCheck","this","coordinate","original","x","y","transform","concat","initPiecesArray","tmp","index","push","PuzzlePiece","_this","props","pieces","react_default","a","createElement","className","style","getStyle","onClick","movePiece","React","Component","PuzzleGrid","_this2","piecesArrayProps","map","p","App_PuzzlePiece","key","NewGameBtn","_this3","newGame","DisplayLabel","children","content","Toolbar","App_NewGameBtn","App_DisplayLabel","step","time","App","_this4","possibleConstructorReturn","getPrototypeOf","call","stopTimer","clearInterval","timer","initGame","setState","piecesArray","emptyCoordinate","isEnd","shufflePuzzle","setInterval","state","window","confirm","pNum","cell","i","_ref","Math","floor","random","iPos","ePos","indexDiff","abs","moveDoubleAndTriple","moveSinglePiece","checkWin","moveLength","sign","indexTmp","findPuzzleIndex","_i","_indexTmp","length","showMessage","message","setTimeout","alert","every","App_Toolbar","App_PuzzleGrid","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6179db64.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nclass Pieces {\r\n  constructor(val) {\r\n    this.coordinate = val;\r\n    this.original = val;\r\n  }\r\n  getStyle() {\r\n    const x = this.coordinate % 4 * 102;\r\n    const y = ((this.coordinate / 4) >> 0) * 102;\r\n    return {\r\n      transform: `translate(${x}px, ${y}px)`\r\n    }\r\n  }\r\n}\r\n\r\nfunction initPiecesArray() {\r\n  const tmp = [];\r\n  for (let index = 0; index < 15; index++) {\r\n    tmp.push(new Pieces(index));\r\n  }\r\n  return tmp;\r\n}\r\n\r\nclass PuzzlePiece extends React.Component {\r\n  render() {\r\n    const index = this.props.pieces.original;\r\n    return (\r\n      <div className=\"cell\" style={this.props.pieces.getStyle()} onClick={() => this.props.movePiece(index)}>\r\n        {index + 1}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass PuzzleGrid extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"grid\">\r\n        {this.props.piecesArrayProps.map((p) =>\r\n          <PuzzlePiece key={p.original} pieces={p} movePiece={this.props.movePiece}/>\r\n        )};\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass NewGameBtn extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"button\" onClick={() => this.props.newGame()}>\r\n        New Game\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass DisplayLabel extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"label\">\r\n        <div className=\"label-icon\">\r\n          {this.props.children}\r\n        </div>\r\n        <div className=\"label-content\">\r\n          {this.props.content}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Toolbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"bar\">\r\n        <NewGameBtn newGame={this.props.newGame}/>\r\n        <DisplayLabel content={this.props.step}>\r\n          <i className=\"fas fa-shoe-prints\" />\r\n        </DisplayLabel>\r\n        <DisplayLabel content={this.props.time}>\r\n          <i className=\"fas fa-clock\" />\r\n        </DisplayLabel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      piecesArray: initPiecesArray(),\r\n      emptyCoordinate: 15,\r\n      step: 0,\r\n      time: 0,\r\n      isEnd: true\r\n    };\r\n  }\r\n  stopTimer = () => {\r\n    clearInterval(this.timer);\r\n    this.timer = 0;\r\n  }\r\n  initGame = () => {\r\n    this.stopTimer();\r\n    this.setState({\r\n      piecesArray: initPiecesArray(),\r\n      emptyCoordinate: 15,\r\n      time: 0,\r\n      step: 0,\r\n      isEnd: false,\r\n    });\r\n    this.shufflePuzzle();\r\n    this.timer = setInterval(() => this.setState({time: this.state.time + 1}), 1000);\r\n  }\r\n  newGame= () => {\r\n    if (this.state.isEnd || window.confirm('New Game?')) this.initGame();\r\n  }\r\n  shufflePuzzle = () => {\r\n    let pNum = 15,\r\n      cell = this.state.piecesArray,\r\n      i = 0;\r\n    while (pNum) {\r\n      pNum--;\r\n      i = Math.floor(Math.random() * pNum);\r\n      [cell[pNum].coordinate, cell[i].coordinate] = [cell[i].coordinate, cell[pNum].coordinate];\r\n    }\r\n    this.setState({piecesArray: cell});\r\n  }\r\n  movePiece = (index) => {\r\n    const cell = this.state.piecesArray,\r\n      iPos = cell[index].coordinate,\r\n      ePos = this.state.emptyCoordinate,\r\n      indexDiff = ePos - iPos;\r\n    if (!this.state.isEnd) {\r\n        //vertical\r\n      if (iPos % 4 === ePos % 4) {\r\n        if (Math.abs(indexDiff / 4) > 1) {\r\n          this.moveDoubleAndTriple((indexDiff / 4), index, 4);\r\n        } else if (Math.abs(indexDiff / 4) === 1) {\r\n          this.moveSinglePiece(iPos, index);\r\n        }\r\n      }\r\n      //horizontal\r\n      if ((iPos / 4) >> 0 === (ePos / 4) >> 0) {\r\n        if (Math.abs(indexDiff) > 1) {\r\n          this.moveDoubleAndTriple(indexDiff, index, 1);\r\n        } else if (Math.abs(indexDiff) === 1) {\r\n          this.moveSinglePiece(iPos, index);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  moveSinglePiece = (indexDiff, index) => {\r\n    const cell = this.state.piecesArray;\r\n    cell[index].coordinate = this.state.emptyCoordinate;\r\n    this.setState((state) => {\r\n      return {\r\n        piecesArray: cell,\r\n        emptyCoordinate: indexDiff,\r\n        step: state.step + 1\r\n      }\r\n    });\r\n    this.checkWin();\r\n  }\r\n  moveDoubleAndTriple = (indexDiff, index, moveLength) => {\r\n    const cell = this.state.piecesArray,\r\n      iPos = cell[index].coordinate,\r\n      sign = Math.sign(indexDiff),\r\n      indexTmp = [];\r\n    for (let i = 0; i < Math.abs(indexDiff); i++) {\r\n      indexTmp.push(this.findPuzzleIndex(iPos + sign * moveLength * i));\r\n    }\r\n    for (const index of indexTmp) {\r\n      cell[index].coordinate += moveLength * sign;\r\n    }\r\n    this.setState((state) => {\r\n      return {\r\n        piecesArray: cell,\r\n        emptyCoordinate: iPos,\r\n        step: state.step + 1\r\n      }\r\n    });\r\n    this.checkWin();\r\n  }\r\n  findPuzzleIndex = (val) => {\r\n    for (let i = 0; i < 15; i++) {\r\n      if (this.state.piecesArray[i].coordinate === val) return i;\r\n    }\r\n  }\r\n  showMessage = (message) => {\r\n    setTimeout(() => alert(message), 600);\r\n  }\r\n  checkWin = () => {\r\n    if (this.state.piecesArray.every((p) => p.original === p.coordinate)) {\r\n      this.showMessage('You Win!');\r\n      this.stopTimer();\r\n      this.setState({isEnd: true});\r\n    }\r\n  }\r\n  render() {\r\n    return(\r\n      <div className=\"puzzle\">\r\n        <h1>15 Puzzle</h1>\r\n        <Toolbar newGame={this.newGame} step={this.state.step} time={this.state.time}/>\r\n        <PuzzleGrid piecesArrayProps={this.state.piecesArray} movePiece={this.movePiece}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}